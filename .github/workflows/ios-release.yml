name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products

      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/joyvibe.ipa"
          APPLE_ID: "liudianying@elmarcucinehongkong.shop"
          APP_SPECIFIC_PASSWORD: "uulp-yczj-ican-msig"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
